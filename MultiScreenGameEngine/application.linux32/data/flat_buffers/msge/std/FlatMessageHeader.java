// automatically generated by the FlatBuffers compiler, do not modify

package msge.std;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FlatMessageHeader extends Table {
  public static FlatMessageHeader getRootAsFlatMessageHeader(ByteBuffer _bb) { return getRootAsFlatMessageHeader(_bb, new FlatMessageHeader()); }
  public static FlatMessageHeader getRootAsFlatMessageHeader(ByteBuffer _bb, FlatMessageHeader obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public FlatMessageHeader __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long timeStamp() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public int clientID() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createFlatMessageHeader(FlatBufferBuilder builder,
      long timeStamp,
      int clientID) {
    builder.startObject(2);
    FlatMessageHeader.addTimeStamp(builder, timeStamp);
    FlatMessageHeader.addClientID(builder, clientID);
    return FlatMessageHeader.endFlatMessageHeader(builder);
  }

  public static void startFlatMessageHeader(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addTimeStamp(FlatBufferBuilder builder, long timeStamp) { builder.addLong(0, timeStamp, 0); }
  public static void addClientID(FlatBufferBuilder builder, int clientID) { builder.addInt(1, clientID, 0); }
  public static int endFlatMessageHeader(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};


// automatically generated by the FlatBuffers compiler, do not modify

package msge.std;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FlatBoxPaddleControllerComponent extends Table {
  public static FlatBoxPaddleControllerComponent getRootAsFlatBoxPaddleControllerComponent(ByteBuffer _bb) { return getRootAsFlatBoxPaddleControllerComponent(_bb, new FlatBoxPaddleControllerComponent()); }
  public static FlatBoxPaddleControllerComponent getRootAsFlatBoxPaddleControllerComponent(ByteBuffer _bb, FlatBoxPaddleControllerComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public FlatBoxPaddleControllerComponent __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public boolean horizontal() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public float speed() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public int playerID() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public msge.std.FlatVec3 paddleColor() { return paddleColor(new msge.std.FlatVec3()); }
  public msge.std.FlatVec3 paddleColor(msge.std.FlatVec3 obj) { int o = __offset(10); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }

  public static void startFlatBoxPaddleControllerComponent(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addHorizontal(FlatBufferBuilder builder, boolean horizontal) { builder.addBoolean(0, horizontal, false); }
  public static void addSpeed(FlatBufferBuilder builder, float speed) { builder.addFloat(1, speed, 0.0f); }
  public static void addPlayerID(FlatBufferBuilder builder, int playerID) { builder.addInt(2, playerID, 0); }
  public static void addPaddleColor(FlatBufferBuilder builder, int paddleColorOffset) { builder.addStruct(3, paddleColorOffset, 0); }
  public static int endFlatBoxPaddleControllerComponent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};


// Schema file for the data structure of the world sent from server to all clients.

include "vectors.fbs";

namespace msge.std;

table FlatSprite
{
    spriteName : string;

    translation : FlatVec3;
    rotation : FlatVec3;
    scale : FlatVec3;
}

table FlatModel
{
    modelName : string;

    translation : FlatVec3;
    rotation : FlatVec3;
    scale : FlatVec3;
}

table FlatRenderComponent
{
    sprites : [FlatSprite];
    spriteTranslationOffsets : [FlatVec3];
    spriteRotationOffsets : [FlatVec3];
    spriteScaleOffsets : [FlatVec3];

    models : [FlatModel];
    modelTranslationOffsets : [FlatVec3];
    modelRotationOffsets : [FlatVec3];
    modelScaleOffsets : [FlatVec3];
}

table FlatTranslateOverTimeComponent
{
    movingLeft : bool;
    xUnitsPerMillisecond : float;
    leftLimit: float;
    rightLimit: float;

    movingDown : bool;
    yUnitsPerMillisecond : float;
    lowerLimit : float;
    upperLimit : float;

    movingForward : bool;
    zUnitsPerMillisecond : float;
    forwardLimit : float;
    backwardLimit : float;
}

table FlatRotateOverTimeComponent
{
    xRadiansPerMillisecond : float;
    yRadiansPerMillisecond : float;
    zRadiansPerMillisecond : float;
}

table FlatScaleOverTimeComponent
{
    xScalingUp : bool;
    xScalePerMillisecond : float;
    xLowerLimit : float;
    xUpperLimit : float;

    yScalingUp : bool;
    yScalePerMillisecond : float;
    yLowerLimit : float;
    yUpperLimit : float;

    zScalingUp : bool;
    zScalePerMillisecond : float;
    zLowerLimit : float;
    zUpperLimit : float;
}

union FlatComponentUnion
{
    FlatRenderComponent,
    FlatTranslateOverTimeComponent,
    FlatRotateOverTimeComponent,
    FlatScaleOverTimeComponent
}

table FlatComponentTable
{
    component : FlatComponentUnion;
}

table FlatGameObject
{
    uid : int;
    tag : string;
    
    translation : FlatVec3;
    rotation : FlatVec3;
    scale : FlatVec3;

    componentTables : [FlatComponentTable];
}

table FlatGameWorld
{
    gameObjects: [FlatGameObject];
}
// automatically generated by the FlatBuffers compiler, do not modify

package msge.std;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FlatRenderComponent extends Table {
  public static FlatRenderComponent getRootAsFlatRenderComponent(ByteBuffer _bb) { return getRootAsFlatRenderComponent(_bb, new FlatRenderComponent()); }
  public static FlatRenderComponent getRootAsFlatRenderComponent(ByteBuffer _bb, FlatRenderComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public FlatRenderComponent __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public FlatSprite sprites(int j) { return sprites(new FlatSprite(), j); }
  public FlatSprite sprites(FlatSprite obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int spritesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public FlatModel models(int j) { return models(new FlatModel(), j); }
  public FlatModel models(FlatModel obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int modelsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createFlatRenderComponent(FlatBufferBuilder builder,
      int spritesOffset,
      int modelsOffset) {
    builder.startObject(2);
    FlatRenderComponent.addModels(builder, modelsOffset);
    FlatRenderComponent.addSprites(builder, spritesOffset);
    return FlatRenderComponent.endFlatRenderComponent(builder);
  }

  public static void startFlatRenderComponent(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addSprites(FlatBufferBuilder builder, int spritesOffset) { builder.addOffset(0, spritesOffset, 0); }
  public static int createSpritesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSpritesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addModels(FlatBufferBuilder builder, int modelsOffset) { builder.addOffset(1, modelsOffset, 0); }
  public static int createModelsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startModelsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endFlatRenderComponent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
};

